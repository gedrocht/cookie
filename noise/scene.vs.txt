#version 330 core

layout(location = 0) in vec3 aPos;
layout(location = 1) in vec3 aNormal;
layout(location = 2) in vec2 aTexCoords;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 lightSpaceMatrix;
uniform float yScale;

out vec3 FragPos;
out vec3 Normal;
out vec4 ShadowCoord;
out vec2 TexCoords;

void main() {
    mat4 scaledModel = model;
    // scaledModel[1][1] *= yScale; // Apply y-axis scaling

    FragPos = vec3(scaledModel * vec4(aPos, 1.0));
    Normal = mat3(transpose(inverse(scaledModel))) * aNormal;
    TexCoords = aTexCoords;
    ShadowCoord = lightSpaceMatrix * vec4(FragPos, 1.0);

    gl_Position = projection * view * scaledModel * vec4(aPos, 1.0);
}
